{"version":3,"sources":["components/StartModal/StartModal.jsx","components/Header/Header.jsx","components/Finish/Finish.jsx","img/index.jsx","img/beach.jpg","img/cupcakes.jpg","img/tree.jpg","img/coffee.jpg","img/roses.jpg","img/waterfall.jpg","components/ButtonComponent/ButtonComponent.jsx","components/GameTime/GameTime.jsx","components/DateAndTime/DateAndTime.jsx","components/Footer/Footer.jsx","components/Card/Card.jsx","components/GameBoard/GameBoard.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","backgroundColor","fontFamily","Finish","startModal","handleGameStart","classes","Dialog","id","open","DialogTitle","DialogActions","Button","onClick","variant","color","HeaderWrapper","styled","div","GameName","GameDate","GameTimer","Header","props","title","time","date","handleReStart","showModal","currentTime","DialogContent","DialogContentText","cardsArray","name","img","width","height","Wrapper","ButtonComponent","reStart","TimerWrapper","TimerRow","ButtonRow","Time","p","GameTime","timer","parentCallback","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","useEffect","Boolean","className","DateAndTime","useState","setCurrentTime","currentDate","setCurrentDate","Date","todayDate","getFullYear","String","getMonth","padStart","getDate","todayTime","getHours","setInterval","clearInterval","hour","wish","FooterWrapper","FooterText","Footer","theme","position","dropdown","top","right","left","zIndex","border","padding","spacing","palette","background","paper","Card","key","isActive","React","setOpen","ClickAwayListener","mouseEvent","touchEvent","onClickAway","src","alt","prev","Gameboard","GameBoard","cards","openCard","matched","handleFlip","map","index","flipCard","includes","App","swap","array","i","j","temp","shuffleCards","length","random","setStartModal","setTimer","setIsActive","concat","setCards","setOpenCard","setMatched","setShowModal","gameStart","interval","firstmatch","secondmatch","setTimeout","callbackFunction","StartModal","opened","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb2f0bb5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Dialog, DialogActions, DialogTitle, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#FFF1C1\",\r\n    fontFamily: '\"Mulish\", sans-serif'\r\n  }\r\n});\r\n\r\nconst Finish = ({ startModal, handleGameStart }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        id=\"alert-dialog\"\r\n        open={startModal}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" classes={{ root: classes.root }}>\r\n          Hello! Let the game begin!\r\n        </DialogTitle>\r\n        <DialogActions classes={{ root: classes.root }}>\r\n          <Button onClick={handleGameStart} variant=\"contained\" color=\"primary\">\r\n            Start\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Finish;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 20vh;\r\n`;\r\n\r\nconst GameName = styled.div`\r\n  width: 30%;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n    margin: 0.2rem;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    font-size: 0.6rem;\r\n  }\r\n`;\r\n\r\nconst GameDate = styled.div`\r\n  width: 30%;\r\n  display: inline-block;\r\n  font-size: 1.5rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.2rem;\r\n    margin: 0.2rem;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst GameTimer = styled.div`\r\n  border-right: 3px solid #3f51b5;\r\n  border-left: 3px solid #3f51b5;\r\n  padding: 0 4rem;\r\n  font-size: 1.5rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.2rem;\r\n    margin: 0.2rem;\r\n    padding: 0 1.5rem;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    font-size: 1rem;\r\n    padding: 0 0.25rem;\r\n  }\r\n`;\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <GameName>\r\n          <h1>{props.title}</h1>\r\n        </GameName>\r\n        <GameTimer>{props.time}</GameTimer>\r\n        <GameDate>{props.date}</GameDate>\r\n      </HeaderWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#FFF1C1\",\r\n    fontFamily: '\"Mulish\", sans-serif',\r\n  },\r\n});\r\n\r\nconst Finish = ({ handleReStart, showModal, currentTime }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        id=\"alert-dialog\"\r\n        open={showModal}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" classes={{ root: classes.root }}>\r\n          Congratulations, You Won!\r\n        </DialogTitle>\r\n        <DialogContent classes={{ root: classes.root }}>\r\n          Your playing time: {`${currentTime}`} .\r\n          <DialogContentText id=\"alert-dialog-description\"></DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions classes={{ root: classes.root }}>\r\n          <Button onClick={handleReStart} variant=\"contained\" color=\"primary\">\r\n            Restart\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Finish;\r\n","import IMG1 from \"./beach.jpg\";\r\nimport IMG2 from \"./cupcakes.jpg\";\r\nimport IMG3 from \"./tree.jpg\";\r\nimport IMG4 from \"./coffee.jpg\";\r\nimport IMG5 from \"./roses.jpg\";\r\nimport IMG6 from \"./waterfall.jpg\";\r\n\r\nconst cardsArray = [\r\n    {\r\n      name: \"Beach\",\r\n      img:IMG1,\r\n      id: 1\r\n    },\r\n    {\r\n      name: \"Cupcakes\",\r\n      img:IMG2,\r\n      id: 2\r\n    },\r\n    {\r\n      name: \"Tree\",\r\n      img:IMG3,\r\n      id: 3\r\n    },\r\n    {\r\n      name: \"Coffee\",\r\n      img:IMG4,\r\n      id: 4\r\n    },\r\n    {\r\n      name: \"Roses\",\r\n      img:IMG5,\r\n      id: 5\r\n    },\r\n    {\r\n      name: \"Waterfall\",\r\n      img:IMG6,\r\n      id: 6\r\n    }\r\n  ];\r\n  \r\n  export default cardsArray;\r\n  ","export default __webpack_public_path__ + \"static/media/beach.d2781dd9.jpg\";","export default __webpack_public_path__ + \"static/media/cupcakes.f3d3c105.jpg\";","export default __webpack_public_path__ + \"static/media/tree.a06de9a5.jpg\";","export default __webpack_public_path__ + \"static/media/coffee.2f1e6194.jpg\";","export default __webpack_public_path__ + \"static/media/roses.cd480d45.jpg\";","export default __webpack_public_path__ + \"static/media/waterfall.19b7aef7.jpg\";","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    fontFamily: '\"Mulish\", sans-serif',\r\n    width: \"8rem\",\r\n    height: \"4rem\",\r\n  },\r\n}));\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5rem 0.5rem 0 0.5rem;\r\n\r\n  @media (max-width: 576px) {\r\n    .button {\r\n      padding: 0.25rem 0.25rem 0 0.25rem;\r\n    }\r\n\r\n    .MuiButton-root {\r\n      width: 4.5rem;\r\n      height: 3rem;\r\n      font-size: 0.7rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ButtonComponent({ reStart, name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Wrapper>\r\n      <Button\r\n        classes={{ root: classes.root }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={reStart}\r\n      >\r\n        {name}\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport ButtonComponent from \"../ButtonComponent/ButtonComponent\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimerWrapper = styled.div``;\r\nconst TimerRow = styled.div``;\r\nconst ButtonRow = styled.div``;\r\nconst Time = styled.p`\r\n  margin: 0 0.25rem;\r\n  font-weight: 900;\r\n`;\r\n\r\nexport default function GameTime({\r\n  timer,\r\n  reStart,\r\n  showModal,\r\n  parentCallback,\r\n}) {\r\n  const formatTime = () => {\r\n    const getSeconds = `0${timer % 60}s`.slice(-3);\r\n    const minutes = `${Math.floor(timer / 60)}`;\r\n    const getMinutes = `0${minutes % 60}m`.slice(-3);\r\n\r\n    return `${getMinutes} : ${getSeconds}`;\r\n  };\r\n\r\n  const sendTimeData = () => {\r\n    parentCallback(formatTime());\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (Boolean(showModal) === true) {\r\n        sendTimeData();\r\n      }\r\n    };\r\n  }, [timer, showModal]);\r\n\r\n  return (\r\n    <TimerWrapper className=\"timer-wrapper\">\r\n      <TimerRow>\r\n        <Time>Time:</Time>\r\n        <Time>{formatTime()}</Time>\r\n      </TimerRow>\r\n      <ButtonRow>\r\n        <ButtonComponent name=\"Restart\" reStart={reStart} />\r\n      </ButtonRow>\r\n    </TimerWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function DateAndTime() {\r\n  const [currentTime, setCurrentTime] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const date = new Date();\r\n\r\n  const todayDate =\r\n    date.getFullYear() +\r\n    \".\" +\r\n    String(date.getMonth() + 1).padStart(2, \"0\") +\r\n    \".\" +\r\n    String(date.getDate()).padStart(2, \"0\");\r\n\r\n  const todayTime =\r\n    String(date.getHours()).padStart(2, \"0\") +\r\n    \":\" +\r\n    String(date.getMinutes()).padStart(2, \"0\") +\r\n    \":\" +\r\n    String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  useEffect(() => {\r\n    const time = setInterval(() => {\r\n      setCurrentTime(todayTime);\r\n      setCurrentDate(todayDate);\r\n    }, 1000);\r\n    return () => clearInterval(time);\r\n  });\r\n\r\n  const hour = new Date().getHours();\r\n  const wish = `Good ${\r\n    (hour < 12 && \"Morning\") || (hour < 17 && \"Afternoon\") || \"Evening\"\r\n  }!`;\r\n  return (\r\n    <div className=\"clock-design\">\r\n      <p>{currentDate}</p>\r\n      <p>{currentTime}</p>\r\n      <p>{wish}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterWrapper = styled.div``;\r\n\r\nconst FooterText = styled.p`\r\n  font-size: 1.3rem;\r\n  @media (max-width: 576px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <FooterText>&copy; Copyright 2021</FooterText>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  dropdown: {\r\n    position: \"absolute\",\r\n    top: \"50vh\",\r\n    right: 0,\r\n    left: \"25vw\",\r\n    zIndex: 1,\r\n    border: \"1px solid\",\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"50vw\",\r\n  },\r\n}));\r\n\r\nexport default function Card({ key, className, onClick, img, isActive }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <ClickAwayListener\r\n      mouseEvent=\"onMouseDown\"\r\n      touchEvent=\"onTouchStart\"\r\n      onClickAway={handleClickAway}\r\n    >\r\n      <div key={key} className={className} onClick={onClick}>\r\n        {open && !isActive ? (\r\n          <div className={classes.dropdown}>Press the Restart button!</div>\r\n        ) : null}\r\n\r\n        <div className=\"inner\">\r\n          <div className=\"front\">\r\n            <img src={img} alt=\"frontimg\" className=\"img\" />\r\n          </div>\r\n          <div className=\"back\" onClick={handleClick}></div>\r\n        </div>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Gameboard = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  flex-wrap: wrap;\r\n  height: 70vh;\r\n`;\r\n\r\nexport default function GameBoard({\r\n  cards,\r\n  openCard,\r\n  matched,\r\n  handleFlip,\r\n  isActive,\r\n}) {\r\n  return (\r\n    <Gameboard>\r\n      {cards.map(({ img, id }, index) => {\r\n        //kártyalap megfordítása css-sel\r\n        let flipCard;\r\n        flipCard = false;\r\n        if (isActive) {\r\n          if (openCard.includes(index)) {\r\n            flipCard = true;\r\n          } else if (matched.includes(id)) {\r\n            flipCard = true;\r\n          }\r\n        }\r\n\r\n        return (\r\n          <Card\r\n            key={index}\r\n            id={id}\r\n            img={img}\r\n            className={`memo-card ${flipCard ? \"flipped\" : \"\"}`}\r\n            isActive={isActive}\r\n            onClick={() => handleFlip(index)}\r\n          />\r\n        );\r\n      })}\r\n    </Gameboard>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport StartModal from \"./components/StartModal/StartModal\";\nimport Header from \"./components/Header/Header\";\nimport Finish from \"./components/Finish/Finish\";\nimport { useEffect, useState } from \"react\";\nimport cardsArray from \"./img/index\";\nimport \"./components/Card/Card.css\";\nimport GameTime from \"./components/GameTime/GameTime\";\nimport DateAndTime from \"./components/DateAndTime/DateAndTime\";\nimport Footer from \"./components/Footer/Footer\";\nimport GameBoard from \"./components/GameBoard/GameBoard\";\n\nexport default function App() {\n  // Fisher-Yates shuffle\n  function swap(array, i, j) {\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  // Shuffling a deck of cards\n  function shuffleCards(array) {\n    const length = array.length;\n    for (let i = length; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * i);\n      const currentIndex = i - 1;\n      swap(array, currentIndex, randomIndex);\n    }\n    return array;\n  }\n\n  const [startModal, setStartModal] = useState(true);\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [cards, setCards] = useState(\n    shuffleCards(cardsArray.concat(cardsArray))\n  );\n  const [openCard, setOpenCard] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentTime, setCurrentTime] = useState(null);\n\n  // Game start\n  const gameStart = () => {\n    setShowModal(false);\n    setTimer(0);\n    setOpenCard([]);\n    setMatched([]);\n    setCards(shuffleCards(cardsArray.concat(cardsArray)));\n    setIsActive(true);\n  };\n\n  const handleGameStart = () => {\n    setStartModal(false);\n    gameStart();\n  };\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setTimer((timer) => timer + 1);\n      }, 1000);\n    } else if (!isActive && timer !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, timer]);\n\n  // Card flip\n  const handleFlip = (index) => {\n    setOpenCard((opened) => {\n      if (opened.length === 0) {\n        return [index];\n      } else if (opened.length === 1 && opened[0] !== index) {\n        return [opened[0], index];\n      } else {\n        return opened;\n      }\n    });\n  };\n\n  // The flipped card's id get in openCard, and\n  // if there are two ID's in the opencard,\n  // it will compare them to each other.\n  useEffect(() => {\n    const firstmatch = cards[openCard[0]];\n    const secondmatch = cards[openCard[1]];\n    if (openCard < 2) return;\n\n    if (secondmatch && firstmatch.id === secondmatch.id) {\n      setMatched((matched) => [...matched, firstmatch.id]);\n    }\n\n    if (openCard.length === 2) {\n      setTimeout(() => {\n        setOpenCard(() => []);\n      }, 1000);\n    }\n  }, [openCard, cards]);\n\n  // At the end of the game, you pass the playing time to CurrentTime.\n  const callbackFunction = (formatTime) => {\n    setCurrentTime(formatTime);\n  };\n\n  // Checks the end of the game\n  useEffect(() => {\n    const checkCompletion = () => {\n      if (matched.length === cardsArray.length) {\n        setShowModal(true);\n        callbackFunction();\n      }\n    };\n    checkCompletion();\n  }, [matched]);\n\n  useEffect(() => {\n    return () => {\n      if (Boolean(showModal) === true) {\n        setIsActive(false);\n      }\n    };\n  }, [timer, showModal]);\n\n  // Game restart\n  const handleReStart = () => {\n    setShowModal(false);\n    gameStart();\n  };\n\n  return (\n    <div className=\"App\">\n      <StartModal startModal={startModal} handleGameStart={handleGameStart} />\n      <Header\n        className=\"header\"\n        title=\"Memory Game\"\n        time={\n          <GameTime\n            timer={timer}\n            showModal={showModal}\n            parentCallback={callbackFunction}\n            reStart={gameStart}\n          />\n        }\n        date={<DateAndTime />}\n      />\n\n      <GameBoard\n        cards={cards}\n        openCard={openCard}\n        handleFlip={handleFlip}\n        matched={matched}\n        isActive={isActive}\n      />\n\n      <Finish\n        showModal={showModal}\n        currentTime={currentTime}\n        handleReStart={handleReStart}\n      />\n      <Footer />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}